version: '3.8'

services:
  postgres-e2e:
    image: postgres:15-alpine
    container_name: dialog-ai-e2e-db
    environment:
      POSTGRES_DB: dialog_ai_e2e
      POSTGRES_USER: e2euser
      POSTGRES_PASSWORD: e2epass
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U e2euser -d dialog_ai_e2e"]
      interval: 2s
      timeout: 3s
      retries: 10
    networks:
      - e2e-network
    tmpfs:
      - /var/lib/postgresql/data

  dialog-service-e2e:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: dialog-ai-service-e2e
    environment:
      NODE_ENV: test
      DATABASE_URL: postgresql://e2euser:e2epass@postgres-e2e:5432/dialog_ai_e2e?schema=public
      OPENAI_API_KEY: test-api-key-e2e
      PORT: 3002
      LOG_LEVEL: debug
    ports:
      - "3002:3002"
    volumes:
      - ./src:/app/src:ro
      - ./prisma:/app/prisma:ro
      - ./tests:/app/tests:rw
      - ./package.json:/app/package.json:ro
      - ./package-lock.json:/app/package-lock.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./playwright.config.ts:/app/playwright.config.ts:rw
      - ./playwright-report:/app/playwright-report:rw
      - ./test-results:/app/test-results:rw
      - /app/node_modules
      - /app/dist
      - /app/node_modules/.prisma
    depends_on:
      postgres-e2e:
        condition: service_healthy
    networks:
      - e2e-network
    command: >
      sh -c "
        echo '=== Starting E2E Test Setup ===' &&
        echo 'Waiting for database to be ready...' &&
        until pg_isready -h postgres-e2e -p 5432 -U e2euser; do
          echo 'Waiting for database...';
          sleep 2;
        done &&
        echo 'Database is ready!' &&
        echo 'Generating Prisma client...' &&
        npx prisma generate &&
        echo 'Running database migrations...' &&
        npx prisma migrate deploy &&
        echo 'Building application...' &&
        npm run build &&
        echo 'Starting service...' &&
        npm start &
        echo 'Waiting for service to be ready...' &&
        sleep 5 &&
        echo '=== Running E2E Tests ===' &&
        npm run test:e2e &&
        echo '=== E2E Tests Complete ===' &&
        exit 0
      "

  test-runner:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: dialog-ai-test-runner
    environment:
      NODE_ENV: test
      DATABASE_URL: postgresql://e2euser:e2epass@postgres-e2e:5432/dialog_ai_e2e?schema=public
      SERVICE_URL: http://dialog-service-e2e:3002
      OPENAI_API_KEY: test-api-key-e2e
    volumes:
      - ./tests:/app/tests:rw
      - ./src:/app/src:ro
      - ./playwright-report:/app/playwright-report:rw
      - ./test-results:/app/test-results:rw
      - /app/node_modules
    depends_on:
      - dialog-service-e2e
    networks:
      - e2e-network
    command: >
      sh -c "
        echo 'Waiting for service to be fully ready...' &&
        sleep 15 &&
        echo 'Running E2E tests...' &&
        npm run test:e2e --reporter=list,html &&
        echo 'Tests completed!'
      "

networks:
  e2e-network:
    driver: bridge